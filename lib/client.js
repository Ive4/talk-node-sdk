// Generated by CoffeeScript 1.7.1
(function() {
  var Client, path, util, _;

  _ = require('lodash');

  util = require('./util');

  path = require('path');

  Client = (function() {
    function Client(options) {
      var apiHost, clientId, clientSecret, map, _ref;
      this.options = options;
      _ref = this.options, apiHost = _ref.apiHost, clientId = _ref.clientId, clientSecret = _ref.clientSecret, map = _ref.map;
      _.keys(map).forEach((function(_this) {
        return function(key) {
          var caller, keys, _map;
          caller = {};
          _map = map[key];
          caller.exec = function(params, callback) {
            var has, reqOptions, _ref1;
            if (callback == null) {
              callback = function() {};
            }
            params.clientId = clientId;
            params.clientSecret = clientSecret;
            if (((_ref1 = _map.has) != null ? _ref1.length : void 0) > 1) {
              has = _.clone(_map.has);
              has.unshift(params);
              if (!_.has.apply(_, has)) {
                return callback(new Error("MISS PARAM " + (params.join(_map.has))));
              }
            }
            reqOptions = {
              method: _map.method,
              uri: apiHost + _map.path,
              qs: params
            };
            return util.request(reqOptions, callback);
          };
          keys = key.split('.');
          if (keys.length === 1) {
            return Object.defineProperty(_this, key, {
              get: function() {
                return caller;
              }
            });
          } else if (keys.length === 2) {
            if (!_this[keys[0]]) {
              _this[keys[0]] = {};
            }
            return Object.defineProperty(_this[keys[0]], keys[1], {
              get: function() {
                return caller;
              }
            });
          }
        };
      })(this));
    }

    return Client;

  })();

  module.exports = Client;

}).call(this);
