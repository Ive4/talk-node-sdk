// Generated by CoffeeScript 1.7.1
(function() {
  var Client, EventEmitter, Talk, config, server, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  _ = require('lodash');

  config = require('./config');

  server = require('./server');

  Client = require('./client');

  Talk = (function(_super) {
    __extends(Talk, _super);

    function Talk() {
      this._client = new Client;
    }

    Talk.prototype.init = function(_config) {
      if (_config == null) {
        _config = {};
      }
      config = _.extend(config, _config);
      return this;
    };

    Talk.prototype.server = function(app, options) {
      if (options == null) {
        options = {};
      }
      server.initialHandler(app, options);
      return this;
    };

    Talk.prototype.client = function(token) {
      return new Client(token);
    };

    Talk.prototype.auth = function() {
      this._client.auth.apply(this._client, arguments);
      return this;
    };

    Talk.prototype.discover = function() {
      this._client.discover.apply(this._client, arguments);
      return this;
    };

    Talk.prototype.call = function() {
      this._client.call.apply(this._client, arguments);
      return this;
    };

    return Talk;

  })(EventEmitter);

  module.exports = new Talk;

}).call(this);
