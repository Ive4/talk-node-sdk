// Generated by CoffeeScript 1.7.1
(function() {
  var Client, Talk, config, request, talk, util, _;

  _ = require('lodash');

  request = require('request');

  config = require('./config');

  Client = require('./client');

  util = require('./util');

  Talk = (function() {
    function Talk(options) {
      if (options == null) {
        options = {};
      }
      this.expire = Date.now();
      this.init(options);
    }

    Talk.prototype.init = function(options) {
      this.options = _.extend(_.clone(config), options);
      return this;
    };

    Talk.prototype.discover = function(version, callback) {
      var apiHost, clientId, clientSecret, params, reqOptions, _ref;
      if (version == null) {
        version = 'v1';
      }
      if (callback == null) {
        callback = function() {};
      }
      _ref = this.options, apiHost = _ref.apiHost, clientId = _ref.clientId, clientSecret = _ref.clientSecret;
      params = {
        clientId: clientId,
        clientSecret: clientSecret
      };
      reqOptions = {
        method: 'GET',
        uri: apiHost + ("/" + version + "/discover"),
        qs: params
      };
      if ((this.client != null) && this.expire > Date.now()) {
        return callback(null, this.client);
      }
      return util.request(reqOptions, (function(_this) {
        return function(err, result) {
          _this.expire = Date.now() + 86400000;
          if (result != null) {
            _this.options.map = result;
          }
          _this.client = new Client(_this.options);
          return callback(err, _this.client);
        };
      })(this));
    };

    return Talk;

  })();

  talk = new Talk;

  talk.Talk = Talk;

  module.exports = talk;

}).call(this);
